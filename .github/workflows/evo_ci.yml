name: EvoPyramid Continuous Integrity

on:
  push:
    branches: [ main, codex-review ]
  pull_request:
    branches: [ main ]

jobs:
  evo_ci:
    name: üß† Evo Core Integrity Check
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      EVODIR: ./local_EVO
      PYTHONUNBUFFERED: 1
      TERM: xterm-256color

    steps:
      # üåÄ 1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          echo "[Evo] Installing dependencies..."
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements_context.txt ]; then pip install -r requirements_context.txt; fi
          echo "[Evo] Dependencies installed successfully."

      # ‚öôÔ∏è 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      - name: Initialize Core Context
        run: |
          echo "[Evo] Checking environment structure..."
          mkdir -p logs apps/core/context/reports
          python - <<'EOF'
          from apps.core.context.environment_detector import detect_environment
          env = detect_environment()
          print(f"[Evo] Environment detected ‚Üí {env.get('env_type')}")
          EOF

      # üß© 3. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Codex Shell
      - name: Run Codex diagnostic
        id: codex_diag
        continue-on-error: true
        run: |
          echo "[Evo] Running Codex diagnostic..."
          python - <<'EOF'
          from apps.cli import evocodex_shell
          try:
              evocodex_shell.main(["diagnose"])
          except Exception as e:
              print("[Evo] Diagnostic failed:", e)
              exit(1)
          EOF

      # üîç 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Trinity Observer (—ç–º—É–ª—è—Ü–∏—è –∑–∞–ø—É—Å–∫–∞)
      - name: Simulate Trinity Observer
        id: trinity_sim
        continue-on-error: true
        run: |
          echo "[Evo] Launching Trinity Observer simulation..."
          nohup python -m apps.core.observers.trinity_observer > logs/trinity_ci.log 2>&1 &
          sleep 4
          echo "[Evo] Checking Trinity status..."
          ps aux | grep trinity_observer | grep -v grep || echo "[!] Trinity not detected."

      # üìú 5. –°–±–æ—Ä –ª–æ–≥–æ–≤
      - name: Upload Evo logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: evo-ci-logs
          path: |
            logs/
            apps/core/context/reports/
            **/*.log

      # üßæ 6. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
      - name: Summary
        if: always()
        run: |
          echo "===================================="
          echo "‚úÖ Evo CI pipeline finished."
          echo "üìÅ Logs and reports uploaded as artifacts."
          echo "===================================="

