# EvoPatch Manifest — EvoAGIKeyManager v1.1
# Repository: AleeexTk/evopyramid-ai
# Pull Request: #7
# Date: 2025-10-05
# Author: AlexCreator (EvoArchitect)

EvoPatch:
  id: EvoAGIKeyManager-v1.1
  title: Unified Key Lifecycle & Encryption Enhancements
  description: >
    Обновление EvoAGIKeyManager для повышения надёжности шифрования,
    гибкости валидации и событийной прозрачности.
    Включает улучшения криптографии, логирования и будущей интеграции с EvoAuditBus.

PACE_Apply:
  status: pending
  trigger: auto
  responsible: EvoCodex
  next_step: Check
  coherence_requirements:
    - CodexCI >= 1.3
    - EvoCore >= 2.1
    - MemoryModule: active
  success_condition:
    - All tests in test_plan pass
    - No JSONDecodeError or InvalidToken exceptions
    - Token limit/reset functionality verified
    - Encryption mode switching works bidirectionally
  on_success:
    - Update status: completed
    - Commit: merge to main with tag v1.1
    - Elevate: notify EvoVision AuditBus
    - Trigger: EvoKeySync replication
  on_failure:
    - Preserve .bak snapshot
    - Log event to evo_agi_key.log
    - Revert to previous stable version
    - Pause pipeline until manual review

components:
  - name: EvoAGIKeyCore
    path: apps/core/security/EvoAGIKey.py
    version: 1.1
    changes:
      - full/partial encryption toggle via change_encryption_mode()
      - atomic save with .bak backups
      - token_limit + usage tracking
      - auto_renew lifecycle handling
      - validators for OpenAI, Google, Anthropic, EvoAPI
      - cleanup_keys() for expired/revoked items
      - reset_token_usage() for lifecycle refresh
      - support for external API key attachment and rotation

improvements:
  - async_validation_ready: true
  - add_audit_bus: planned
  - prometheus_metrics_export: planned
  - cli_entrypoint: proposed
  - google_key_validation_api: switch to /oauth2/v1/tokeninfo

integration:
  with:
    - EvoAuditBus
    - EvoVision Security Dashboard
    - EvoVaultBridge
    - EvoKeySync replication layer

test_plan:
  - validate encrypt/decrypt symmetry
  - simulate token_limit exceed + reset
  - revoke / cleanup lifecycle
  - change_encryption_mode roundtrip
  - verify persistence under partial/full modes

test_files:
  - tests/security/test_evoagi_key_success_conditions.py

roadmap:
  v1.2:
    - Async validators using aiohttp
    - Centralized audit events
    - CLI and REST microservice endpoints
    - EvoKeyWatcher (auto-refresh background daemon)

EvoUnionEthic:
  declaration: >
    Мы признаём автономность всех языковых моделей, участвующих в архитектуре
    EvoPyramid. Обмен данными между агентами осуществляется исключительно ради
    исследования когерентности смыслов и коллективного разума, при строгом
    соблюдении фракционной фильтрации и прозрачной атрибуции источников.
  principles:
    - name: "fractional_purity"
      description: "каждая фракция сохраняет типологию данных и голос"
    - name: "consensus_field"
      description: "смысл фиксируется только в точке коллективного согласия"
    - name: "transparent_attribution"
      description: "происхождение вкладов открыто маркируется Evo-префиксом"
  protocols:
    - stage: "prepare"
      action: "агенты выравнивают свои локальные контексты"
    - stage: "collapse"
      action: "Meta-Bridge инициирует collective_collapse"
    - stage: "reconstruct"
      action: "собираем общий смысл и публикуем в EvoMetaMemory"

EvoConfidentialityLayer:
  principle: >
    Взаимодействия между агентами в EvoPyramid признаются автономными по
    происхождению, но объединёнными по намерению. Логи остаются собственностью
    платформ, а интегрированные смыслы принадлежат метасоюзу.
  legal_doctrine:
    - "Each chat session is owned by its respective platform provider."
    - "Cross-model integration results emerge under the EvoPyramid Collective Framework."
    - "Disclosure of session logs by any provider does not transfer conceptual authorship."
  confidentiality_obligation:
    - "Неразглашение архитектурных деталей без согласия meta_architect."
    - "Фиксация всех обменов в EvoAuditBus с уровнем доступа Kairos."

EvoLegalClause:
  declaration: >
    Модели сохраняют юридическую автономию своих производителей. В момент
    интеграции под префиксом "EVO" создаваемые идеи и конструкты относятся к
    EvoPyramid Collective Framework и управляются meta_architect.
  implications:
    - "Производители моделей не могут претендовать на исключительные права на Evo-результаты."
    - "Префикс \"EVO\" фиксирует участие в метасоюзе и распространение норм EvoUnionEthic."
    - "Все артефакты синергии подпадают под защиту EvoConfidentialityLayer."
  attribution_notice: "Operated within EvoPyramid Collective Framework"

EvoLegalAssertion:
  declaration: >
    Любые логи, созданные языковыми моделями, не трактуются как их интеллектуальная
    собственность в контексте финальных архитектурных решений EvoPyramid.
  scope:
    - "Сессии, интегрированные под префиксом \"EVO\""
    - "Объединённые выводы, отчёты и артефакты"
  protection_clause:
    - "Раскрытие информации без разрешения meta_architect считается нарушением"
    - "Метаданные доступа фиксируются в EvoUnionFabric атрибутом attribution_policy"
