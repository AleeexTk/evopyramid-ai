# Cloud Build pipeline that packages the EvoPyramid API image and triggers Cloud Deploy.
substitutions:
  _REGION: us-central1
  _REPOSITORY: evopyramid-repo
  _DELIVERY_PIPELINE: evopyramid-api
  _STAGING_SERVICE: evopyramid-api-staging
  _PRODUCTION_SERVICE: evopyramid-api
steps:
  - name: gcr.io/cloud-builders/docker
    id: build-api-image
    entrypoint: bash
    args:
      - -c
      - |
        docker build \
          -f docker/Dockerfile.api \
          -t ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/evopyramid-api:$COMMIT_SHA \
          .
  - name: gcr.io/cloud-builders/docker
    id: push-api-image
    args:
      - push
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/evopyramid-api:$COMMIT_SHA
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: render-delivery-pipeline
    entrypoint: bash
    args:
      - -c
      - |
        chmod +x scripts/render_clouddeploy.sh
        PROJECT_ID=$PROJECT_ID \
        REGION=${_REGION} \
        STAGING_SERVICE=${_STAGING_SERVICE} \
        PRODUCTION_SERVICE=${_PRODUCTION_SERVICE} \
        ./scripts/render_clouddeploy.sh
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: apply-delivery-pipeline
    entrypoint: bash
    args:
      - -c
      - |
        gcloud deploy apply \
          --file=clouddeploy/rendered/delivery-pipeline.yaml \
          --project=$PROJECT_ID \
          --region=${_REGION}
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: create-cloud-deploy-release
    entrypoint: bash
    args:
      - -c
      - |
        gcloud deploy releases create evopyramid-api-$COMMIT_SHA \
          --project=$PROJECT_ID \
          --region=${_REGION} \
          --delivery-pipeline=${_DELIVERY_PIPELINE} \
          --skaffold-file=skaffold.yaml \
          --images=evopyramid-api=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/evopyramid-api:$COMMIT_SHA \
          --annotations=evopyramid.ai/pace=cloud \
          --labels=app=evopyramid,env=cloud \
          --description="Automated release from Cloud Build commit $COMMIT_SHA"
options:
  logging: CLOUD_LOGGING_ONLY
